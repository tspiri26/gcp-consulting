apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-cert
spec:
  domains:
    - gcp-consulting.net
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.global-static-ip-name: ingress
    networking.gke.io/managed-certificates: managed-cert
    kubernetes.io/ingress.class: "gce"
    networking.gke.io/v1beta1.FrontendConfig: "frontend-config"
spec:
  rules:
  - host: "gcp-consulting.net"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: gcp-con-service
            port:
              number: 80
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: frontend-config
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: 300
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: my-backendconfig
spec:
  timeoutSec: 40
  customRequestHeaders:
  headers:
  - "X-Client-Region:{client_region}"
  - "X-Client-City:{client_city}"
  - "X-Client-CityLatLong:{client_city_lat_long}"
---
apiVersion: v1
kind: Service
metadata:
  name: gcp-con-service
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80":"my-backendconfig"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: con
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcp-con-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: con
  template:
    metadata:
      labels:
        app: con
    spec:
      containers:
      - name: gcp-con
        image: spiridon26/gcp-con:latest
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_HOST
          value: "10.128.0.8"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-credentials
              key: database
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: gcp-con-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gcp-con-deployment
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
---
apiVersion: v1
data:
  database: Y2xpZW50cw==
  password: d0gyN3NLN2c=
  username: dGVv
kind: Secret
metadata:
  name: mysql
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  replicas: 1
  serviceName: mysql
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mysql
          image: mysql:5.6
          ports:
            - name: tpc
              protocol: TCP
              containerPort: 3306
          env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: username
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: password
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: mysql-credentials
                key: database
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "yes"
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: standard
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mysql
# spec:
#   ports:
#   - port: 3306
#   selector:
#     app: mysql
#   clusterIP: None
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mysql